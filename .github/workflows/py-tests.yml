#  Copyright 2021 Collate
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#  http://www.apache.org/licenses/LICENSE-2.0
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

name: py-tests
on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        py-version: ['3.7']
    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: main
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Set up Python ${{ matrix.py-version }}
      uses: actions/setup-python@v2
      with:
        python-version:  ${{ matrix.py-version }}

    - name: Install Ubuntu dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y unixodbc-dev python3-venv librdkafka-dev gcc libsasl2-dev build-essential libssl-dev libffi-dev \
        unixodbc-dev libevent-dev python3-dev git openjdk-11-jdk ca-certificates-java
        wget https://dlcdn.apache.org/maven/maven-3/3.8.6/binaries/apache-maven-3.8.6-bin.tar.gz
        tar zxvf apache-maven-3.8.6-bin.tar.gz
        mv apache-maven-3.8.6 /opt/
        M2_HOME='/opt/apache-maven-3.8.6'
        PATH="$M2_HOME/bin:$PATH"
        export PATH
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
        mvn clean package
        cd openmetadata-dist/target
        tar zxvf openmetadata*.tar.gz
        cd openmetadata*/
        ./bin/openmetadata.sh start
        

    - name: Generate models
      run: |
        python3 -m venv env
        source env/bin/activate
        sudo make install_antlr_cli
        make install_dev generate install_all install_test
        make run_python_tests

    # - name: Install open-metadata dependencies
    #   run: |
    #     source env/bin/activate
    #     make install_all install_test

    # - name: Start Server and Ingest Sample Data
    #   env:
    #     INGESTION_DEPENDENCY: "mysql,elasticsearch"
    #   run: 
    #   timeout-minutes: 30

    # - name: Run Python Tests
    #   if: ${{ matrix.py-version != '3.9' }}
    #   run: |
    #     source env/bin/activate
    #     make run_python_tests

    # - name: Run Python Tests & record coverage
    #   if: ${{ matrix.py-version == '3.9' }}
    #   run: |
    #     source env/bin/activate
    #     make coverage
    #     rm pom.xml
    #     # fix coverage xml report for github
    #     sed -i 's/src\/metadata/\/github\/workspace\/ingestion\/src\/metadata/g' ingestion/ci-coverage.xml

    #   # we have to pass these args values since we are working with the 'pull_request_target' trigger
    # - name: Push Results in PR to Sonar
    #   uses: sonarsource/sonarcloud-github-action@master
    #   if: ${{ github.event_name == 'pull_request_target' && matrix.py-version == '3.9' }}
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     SONAR_TOKEN: ${{ secrets.INGESTION_SONAR_SECRET }}
    #   with:
    #     projectBaseDir: ingestion/
    #     args: >
    #       -Dproject.settings=ingestion/sonar-project.properties
    #       -Dsonar.pullrequest.key=${{ github.event.pull_request.number }}
    #       -Dsonar.pullrequest.branch=${{ github.head_ref }}
    #       -Dsonar.pullrequest.github.repository=OpenMetadata
    #       -Dsonar.scm.revision=${{ github.event.pull_request.head.sha }}
    #       -Dsonar.pullrequest.provider=github

    # - name: Push Results to Sonar
    #   uses: sonarsource/sonarcloud-github-action@master
    #   if: ${{ github.event_name == 'push' &&  matrix.py-version == '3.9' }}
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     SONAR_TOKEN: ${{ secrets.INGESTION_SONAR_SECRET }}
    #   with:
    #     projectBaseDir: ingestion/
